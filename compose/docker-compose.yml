# # Repsond OK
# version: '3.8'
# services:
#   mongo:
#     image: mongo
#     restart: always
#     container_name: mongo
#     ports:
#       - 27017:27017
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#       # MONGO_INITDB_DATABASE: init
#     volumes:
#       - ./db_data/:/data/db/
#       - /etc/timezone:/etc/timezone:ro

#   mongo-express:
#     image: mongo-express
#     restart: always
#     container_name: mongo_ui
#     ports:
#       - 8081:8081
#     environment:
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: example
#       ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#       # ME_CONFIG_MONGODB_SERVER: mongo
#       # ME_CONFIG_MONGODB_PORT: 27017
#       ME_CONFIG_MONGODB_ENABLE_ADMIN: true


# Respond OK
version: '3.8'
services:
  mongodb:
    image: mongo:latest # use the latest image.
    container_name: mongodb
    restart: unless-stopped
    environment: # set required env variables to access mongo
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes: # optional to preserve database after container is deleted.
      - ./database-data:/data/db
  
  # Mongo Express Service
  mongo-express:
    image: mongo-express:latest # latest image
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongodb:27017/
      # ME_CONFIG_MONGODB_SERVER: mongodb 
      # use the name of the mongo container above for server env var.
      # In our case this is mongodb